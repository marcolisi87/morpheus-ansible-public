---
# This playbook will install php and nginx

- name: Add ppa Repository
  sudo: yes
  apt_repository: repo=ppa:ondrej/{{ php.ppa }}
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

- name: Update apt cache
  apt: update_cache=yes cache_valid_time=3600
  become_user: root
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

- name: install perl pwgen ssl-cert
  apt: pkg={{item}} install_recommends=no state=installed
  with_items:
    - perl
    - pwgen
    - ssl-cert
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

- name: add apt repository key
  apt_key:
    url: "http://nginx.org/keys/nginx_signing.key"
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

- name: add apt repository
  apt_repository:
    repo: "deb http://nginx.org/packages/mainline/ubuntu/ trusty nginx"
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

- name: install nginx
  apt: 
    name: "nginx=1.9.0*"
    state: present
    update_cache: yes
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

- name: make directories
  shell: mkdir -p {{item}}
  with_items:
    - /var/www/html
    - /var/cache/html
    - /etc/nginx/certs
    - /etc/nginx/sites-enabled

- name: copy nginx config file
  template: src=default.conf.j2 dest=/default.conf mode=0777

- name: Install php5-fpm
  apt: pkg=php5-fpm state=latest
  become_user: root
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

- name: Install php5
  apt: pkg=php5 state=latest
  become_user: root
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

- name: Install PHP Packages
  apt: pkg={{ item }} state=latest
  with_items: '{{php.packages}}'
  when: php.packages is defined
  become_user: root
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

#- name: Install supervisor
#  apt: pkg=supervisor state=latest
#  become_user: root

- name: change fix_pathinfo php-fpm config
  shell: sed -i -e "s/;cgi.fix_pathinfo=1/cgi.fix_pathinfo=0/g" /etc/php5/fpm/php.ini

- name: change upload_max_filesize in php-fpm config
  shell: sed -i -e "s/upload_max_filesize\s*=\s*2M/upload_max_filesize = 100M/g" /etc/php5/fpm/php.ini

- name: change post_max_size in php-fpm config
  shell: sed -i -e "s/post_max_size\s*=\s*8M/post_max_size = 100M/g" /etc/php5/fpm/php.ini

- name: change daemonize in php-fpm config
  shell: sed -i -e "s/;daemonize\s*=\s*yes/daemonize = no/g" /etc/php5/fpm/php-fpm.conf

- name: change catch_workers_output in php-fpm config
  shell: sed -i -e "s/;catch_workers_output\s*=\s*yes/catch_workers_output = yes/g" /etc/php5/fpm/pool.d/www.conf

- name: change max children in php-fpm config
  shell: sed -i -e "s/pm.max_children = 5/pm.max_children = 9/g" /etc/php5/fpm/pool.d/www.conf

- name: change start_servers in php-fpm config
  shell: sed -i -e "s/pm.start_servers = 2/pm.start_servers = 3/g" /etc/php5/fpm/pool.d/www.conf

- name: change min_spare_servers in php-fpm config
  shell: sed -i -e "s/pm.min_spare_servers = 1/pm.min_spare_servers = 2/g" /etc/php5/fpm/pool.d/www.conf

- name: change max_spare_servers in php-fpm config
  shell: sed -i -e "s/pm.max_spare_servers = 3/pm.max_spare_servers = 4/g" /etc/php5/fpm/pool.d/www.conf

- name: change max_requests in php-fpm config
  shell: sed -i -e "s/pm.max_requests = 500/pm.max_requests = 200/g" /etc/php5/fpm/pool.d/www.conf

#- name: tweak nginx config
#  shell: sed -i -e"s/keepalive_timeout 2/keepalive_timeout 2;\n\tclient_max_body_size 100m/" /etc/nginx/nginx.conf

- name: fix ownership of sock file for php-fpm
  shell: sed -i -e "s/;listen.mode = 0660/listen.mode = 0766/g" /etc/php5/fpm/pool.d/www.conf

- name: fix ownership of sock file for php-fpm
  shell: find /etc/php5/cli/conf.d/ -name "*.ini" -exec sed -i -re 's/^(\s*)#(.*)/\1;\2/g' {} \;

- name: copy default html page
  template: src=index.html dest=/index.html mode=0777

- name: copy default php page
  template: src=index.php dest=/index.php mode=0777

- name: copy sample ssl certificate 
  copy: src=/etc/ssl/certs/ssl-cert-snakeoil.pem dest=/etc/nginx/certs/nginx.crt remote_src=true

- name: copy sample ssl certificate key
  copy: src=/etc/ssl/private/ssl-cert-snakeoil.key dest=/etc/nginx/certs/nginx.key remote_src=true

#- name: copy supervisord config
#  template: src=supervisord.conf dest=/etc/supervisor/conf.d/supervisord.conf mode=0777

#- name: stop supervisord
#  shell: service supervisor stop && update-rc.d -f supervisor remove

- name: Ensure nginx will restart upon startup as well as stop the service
  service: name=nginx enabled=yes state=stopped

- name: remove nginx script link
  shell: update-rc.d -f nginx remove

#- name: copy php5-fpm override
#  template: src=php5-fpm.override.j2 dest=/etc/init/php5-fpm.override mode=0644

- name: Ensure php5-fpm will restart upon startup as well as stop the service
  service: name=php5-fpm enabled=yes state=stopped

#- name: remove php5-fpm script link
#  shell: update-rc.d -f php5-fpm remove

- name: copy start script
  template: src=start.sh dest=/start.sh mode=0755

- name: create morpheus entrypoint
  template: src=morpheus-entrypoint.sh.j2 dest=/entrypoint.sh mode=0777

